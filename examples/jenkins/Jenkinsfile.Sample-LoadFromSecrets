pipeline {
  agent {
    kubernetes {
      yaml """
metadata:
  labels:
    some-label: custom-github-jira-bot
spec:
  containers:
  - name: github-jira-bot
    image: docker.pkg.github.com/benbentwo/github-jira-bot/master:0.1.2
    command:
    - cat
    tty: true
    env:
    - name: CONTAINER_ENV_VAR
      value: maven
"""
    }
  }

  stages {
    stage('Run Github Jira Bot') {
      steps {
        container('github-jira-bot') {
        withCredentials([
            usernamePassword(credentialsId: 'github-jira-bot-jira-secret', usernameVariable: 'JIRA_UN', passwordVariable: 'JIRA_TOKEN'),
            usernamePassword(credentialsId: 'github-jira-bot-gh-secret', usernameVariable: 'GH_UN', passwordVariable: 'GH_API_TOKEN'),
            usernamePassword(credentialsId: 'github-jira-bot-urls', usernameVariable: 'GH_URL', passwordVariable: 'JIRA_URL')
        ]) {

            sh """echo '''
componentMap:
  repo: component
github:
  enterprise: true
jira:
  defaultIssueType: Story
  newTicketTransition: -1
  projectKey: GJB
magicQaWord: 'QA:'
maxLength: 600
          ''' > config.yaml"""

              // load values from the above command (could add secrets there), then add secrets
              sh "github-jira-bot create bot --from-file config.yaml -f myConfig.yaml --git-api-token ${GH_API_TOKEN} --git-url ${GH_URL} --git-username ${GH_UN} --jira-url ${JIRA_URL} --jira-user ${JIRA_UN} --jira-token ${JIRA_TOKEN}"

              sh "github-jira-bot run --from-file ./config/myConfig.yaml --verbose"
          }
        }
      }
    }
  }
}
